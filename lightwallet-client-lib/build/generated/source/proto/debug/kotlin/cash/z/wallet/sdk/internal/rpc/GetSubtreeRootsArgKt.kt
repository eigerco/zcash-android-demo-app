// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: service.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cash.z.wallet.sdk.internal.rpc;

@kotlin.jvm.JvmName("-initializegetSubtreeRootsArg")
public inline fun getSubtreeRootsArg(block: cash.z.wallet.sdk.internal.rpc.GetSubtreeRootsArgKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.GetSubtreeRootsArg =
  cash.z.wallet.sdk.internal.rpc.GetSubtreeRootsArgKt.Dsl._create(cash.z.wallet.sdk.internal.rpc.Service.GetSubtreeRootsArg.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `cash.z.wallet.sdk.rpc.GetSubtreeRootsArg`
 */
public object GetSubtreeRootsArgKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cash.z.wallet.sdk.internal.rpc.Service.GetSubtreeRootsArg.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cash.z.wallet.sdk.internal.rpc.Service.GetSubtreeRootsArg.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cash.z.wallet.sdk.internal.rpc.Service.GetSubtreeRootsArg = _builder.build()

    /**
     * <pre>
     * Index identifying where to start returning subtree roots
     * </pre>
     *
     * <code>uint32 startIndex = 1;</code>
     */
    public var startIndex: kotlin.Int
      @JvmName("getStartIndex")
      get() = _builder.getStartIndex()
      @JvmName("setStartIndex")
      set(value) {
        _builder.setStartIndex(value)
      }
    /**
     * ```
     * Index identifying where to start returning subtree roots
     * ```
     *
     * `uint32 startIndex = 1;`
     */
    public fun clearStartIndex() {
      _builder.clearStartIndex()
    }

    /**
     * ```
     * Shielded protocol to return subtree roots for
     * ```
     *
     * `.cash.z.wallet.sdk.rpc.ShieldedProtocol shieldedProtocol = 2;`
     */
    public var shieldedProtocol: cash.z.wallet.sdk.internal.rpc.Service.ShieldedProtocol
      @JvmName("getShieldedProtocol")
      get() = _builder.getShieldedProtocol()
      @JvmName("setShieldedProtocol")
      set(value) {
        _builder.setShieldedProtocol(value)
      }
    public var shieldedProtocolValue: kotlin.Int
      @JvmName("getShieldedProtocolValue")
      get() = _builder.getShieldedProtocolValue()
      @JvmName("setShieldedProtocolValue")
      set(value) {
        _builder.setShieldedProtocolValue(value)
      }
    /**
     * ```
     * Shielded protocol to return subtree roots for
     * ```
     *
     * `.cash.z.wallet.sdk.rpc.ShieldedProtocol shieldedProtocol = 2;`
     */
    public fun clearShieldedProtocol() {
      _builder.clearShieldedProtocol()
    }

    /**
     * <pre>
     * Maximum number of entries to return, or 0 for all entries.
     * </pre>
     *
     * <code>uint32 maxEntries = 3;</code>
     */
    public var maxEntries: kotlin.Int
      @JvmName("getMaxEntries")
      get() = _builder.getMaxEntries()
      @JvmName("setMaxEntries")
      set(value) {
        _builder.setMaxEntries(value)
      }
    /**
     * ```
     * Maximum number of entries to return, or 0 for all entries.
     * ```
     *
     * `uint32 maxEntries = 3;`
     */
    public fun clearMaxEntries() {
      _builder.clearMaxEntries()
    }
  }
}
public inline fun cash.z.wallet.sdk.internal.rpc.Service.GetSubtreeRootsArg.copy(block: `cash.z.wallet.sdk.internal.rpc`.GetSubtreeRootsArgKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.GetSubtreeRootsArg =
  `cash.z.wallet.sdk.internal.rpc`.GetSubtreeRootsArgKt.Dsl._create(this.toBuilder()).apply { block() }._build()

