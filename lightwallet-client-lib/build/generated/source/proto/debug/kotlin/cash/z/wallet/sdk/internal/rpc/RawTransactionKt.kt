// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: service.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cash.z.wallet.sdk.internal.rpc;

@kotlin.jvm.JvmName("-initializerawTransaction")
public inline fun rawTransaction(block: cash.z.wallet.sdk.internal.rpc.RawTransactionKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.RawTransaction =
  cash.z.wallet.sdk.internal.rpc.RawTransactionKt.Dsl._create(cash.z.wallet.sdk.internal.rpc.Service.RawTransaction.newBuilder()).apply { block() }._build()
/**
 * ```
 * RawTransaction contains the complete transaction data. It also optionally includes 
 * the block height in which the transaction was included, or, when returned
 * by GetMempoolStream(), the latest block height.
 * ```
 *
 * Protobuf type `cash.z.wallet.sdk.rpc.RawTransaction`
 */
public object RawTransactionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cash.z.wallet.sdk.internal.rpc.Service.RawTransaction.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cash.z.wallet.sdk.internal.rpc.Service.RawTransaction.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cash.z.wallet.sdk.internal.rpc.Service.RawTransaction = _builder.build()

    /**
     * <pre>
     * exact data returned by Zcash 'getrawtransaction'
     * </pre>
     *
     * <code>bytes data = 1;</code>
     */
    public var data: com.google.protobuf.ByteString
      @JvmName("getData")
      get() = _builder.getData()
      @JvmName("setData")
      set(value) {
        _builder.setData(value)
      }
    /**
     * ```
     * exact data returned by Zcash 'getrawtransaction'
     * ```
     *
     * `bytes data = 1;`
     */
    public fun clearData() {
      _builder.clearData()
    }

    /**
     * <pre>
     * height that the transaction was mined (or -1)
     * </pre>
     *
     * <code>uint64 height = 2;</code>
     */
    public var height: kotlin.Long
      @JvmName("getHeight")
      get() = _builder.getHeight()
      @JvmName("setHeight")
      set(value) {
        _builder.setHeight(value)
      }
    /**
     * ```
     * height that the transaction was mined (or -1)
     * ```
     *
     * `uint64 height = 2;`
     */
    public fun clearHeight() {
      _builder.clearHeight()
    }
  }
}
public inline fun cash.z.wallet.sdk.internal.rpc.Service.RawTransaction.copy(block: `cash.z.wallet.sdk.internal.rpc`.RawTransactionKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.RawTransaction =
  `cash.z.wallet.sdk.internal.rpc`.RawTransactionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

