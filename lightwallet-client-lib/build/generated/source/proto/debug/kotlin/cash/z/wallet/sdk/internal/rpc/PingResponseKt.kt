// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: service.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cash.z.wallet.sdk.internal.rpc;

@kotlin.jvm.JvmName("-initializepingResponse")
public inline fun pingResponse(block: cash.z.wallet.sdk.internal.rpc.PingResponseKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.PingResponse =
  cash.z.wallet.sdk.internal.rpc.PingResponseKt.Dsl._create(cash.z.wallet.sdk.internal.rpc.Service.PingResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * PingResponse is used to indicate concurrency, how many Ping rpcs
 * are executing upon entry and upon exit (after the delay).
 * This rpc is used for testing only.
 * ```
 *
 * Protobuf type `cash.z.wallet.sdk.rpc.PingResponse`
 */
public object PingResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cash.z.wallet.sdk.internal.rpc.Service.PingResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cash.z.wallet.sdk.internal.rpc.Service.PingResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cash.z.wallet.sdk.internal.rpc.Service.PingResponse = _builder.build()

    /**
     * <code>int64 entry = 1;</code>
     */
    public var entry: kotlin.Long
      @JvmName("getEntry")
      get() = _builder.getEntry()
      @JvmName("setEntry")
      set(value) {
        _builder.setEntry(value)
      }
    /**
     * `int64 entry = 1;`
     */
    public fun clearEntry() {
      _builder.clearEntry()
    }

    /**
     * <code>int64 exit = 2;</code>
     */
    public var exit: kotlin.Long
      @JvmName("getExit")
      get() = _builder.getExit()
      @JvmName("setExit")
      set(value) {
        _builder.setExit(value)
      }
    /**
     * `int64 exit = 2;`
     */
    public fun clearExit() {
      _builder.clearExit()
    }
  }
}
public inline fun cash.z.wallet.sdk.internal.rpc.Service.PingResponse.copy(block: `cash.z.wallet.sdk.internal.rpc`.PingResponseKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.PingResponse =
  `cash.z.wallet.sdk.internal.rpc`.PingResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

