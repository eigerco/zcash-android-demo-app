// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: service.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cash.z.wallet.sdk.internal.rpc;

@kotlin.jvm.JvmName("-initializesubtreeRoot")
public inline fun subtreeRoot(block: cash.z.wallet.sdk.internal.rpc.SubtreeRootKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.SubtreeRoot =
  cash.z.wallet.sdk.internal.rpc.SubtreeRootKt.Dsl._create(cash.z.wallet.sdk.internal.rpc.Service.SubtreeRoot.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `cash.z.wallet.sdk.rpc.SubtreeRoot`
 */
public object SubtreeRootKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cash.z.wallet.sdk.internal.rpc.Service.SubtreeRoot.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cash.z.wallet.sdk.internal.rpc.Service.SubtreeRoot.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cash.z.wallet.sdk.internal.rpc.Service.SubtreeRoot = _builder.build()

    /**
     * <pre>
     * The 32-byte Merkle root of the subtree.
     * </pre>
     *
     * <code>bytes rootHash = 2;</code>
     */
    public var rootHash: com.google.protobuf.ByteString
      @JvmName("getRootHash")
      get() = _builder.getRootHash()
      @JvmName("setRootHash")
      set(value) {
        _builder.setRootHash(value)
      }
    /**
     * ```
     * The 32-byte Merkle root of the subtree.
     * ```
     *
     * `bytes rootHash = 2;`
     */
    public fun clearRootHash() {
      _builder.clearRootHash()
    }

    /**
     * <pre>
     * The hash of the block that completed this subtree.
     * </pre>
     *
     * <code>bytes completingBlockHash = 3;</code>
     */
    public var completingBlockHash: com.google.protobuf.ByteString
      @JvmName("getCompletingBlockHash")
      get() = _builder.getCompletingBlockHash()
      @JvmName("setCompletingBlockHash")
      set(value) {
        _builder.setCompletingBlockHash(value)
      }
    /**
     * ```
     * The hash of the block that completed this subtree.
     * ```
     *
     * `bytes completingBlockHash = 3;`
     */
    public fun clearCompletingBlockHash() {
      _builder.clearCompletingBlockHash()
    }

    /**
     * <pre>
     * The height of the block that completed this subtree in the main chain.
     * </pre>
     *
     * <code>uint64 completingBlockHeight = 4;</code>
     */
    public var completingBlockHeight: kotlin.Long
      @JvmName("getCompletingBlockHeight")
      get() = _builder.getCompletingBlockHeight()
      @JvmName("setCompletingBlockHeight")
      set(value) {
        _builder.setCompletingBlockHeight(value)
      }
    /**
     * ```
     * The height of the block that completed this subtree in the main chain.
     * ```
     *
     * `uint64 completingBlockHeight = 4;`
     */
    public fun clearCompletingBlockHeight() {
      _builder.clearCompletingBlockHeight()
    }
  }
}
public inline fun cash.z.wallet.sdk.internal.rpc.Service.SubtreeRoot.copy(block: `cash.z.wallet.sdk.internal.rpc`.SubtreeRootKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.SubtreeRoot =
  `cash.z.wallet.sdk.internal.rpc`.SubtreeRootKt.Dsl._create(this.toBuilder()).apply { block() }._build()

