// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: service.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cash.z.wallet.sdk.internal.rpc;

@kotlin.jvm.JvmName("-initializetxFilter")
public inline fun txFilter(block: cash.z.wallet.sdk.internal.rpc.TxFilterKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.TxFilter =
  cash.z.wallet.sdk.internal.rpc.TxFilterKt.Dsl._create(cash.z.wallet.sdk.internal.rpc.Service.TxFilter.newBuilder()).apply { block() }._build()
/**
 * ```
 * A TxFilter contains the information needed to identify a particular
 * transaction: either a block and an index, or a direct transaction hash.
 * Currently, only specification by hash is supported.
 * ```
 *
 * Protobuf type `cash.z.wallet.sdk.rpc.TxFilter`
 */
public object TxFilterKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cash.z.wallet.sdk.internal.rpc.Service.TxFilter.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cash.z.wallet.sdk.internal.rpc.Service.TxFilter.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cash.z.wallet.sdk.internal.rpc.Service.TxFilter = _builder.build()

    /**
     * ```
     * block identifier, height or hash
     * ```
     *
     * `.cash.z.wallet.sdk.rpc.BlockID block = 1;`
     */
    public var block: cash.z.wallet.sdk.internal.rpc.Service.BlockID
      @JvmName("getBlock")
      get() = _builder.getBlock()
      @JvmName("setBlock")
      set(value) {
        _builder.setBlock(value)
      }
    /**
     * ```
     * block identifier, height or hash
     * ```
     *
     * `.cash.z.wallet.sdk.rpc.BlockID block = 1;`
     */
    public fun clearBlock() {
      _builder.clearBlock()
    }
    /**
     * ```
     * block identifier, height or hash
     * ```
     *
     * `.cash.z.wallet.sdk.rpc.BlockID block = 1;`
     * @return Whether the block field is set.
     */
    public fun hasBlock(): kotlin.Boolean {
      return _builder.hasBlock()
    }

    /**
     * <pre>
     * index within the block
     * </pre>
     *
     * <code>uint64 index = 2;</code>
     */
    public var index: kotlin.Long
      @JvmName("getIndex")
      get() = _builder.getIndex()
      @JvmName("setIndex")
      set(value) {
        _builder.setIndex(value)
      }
    /**
     * ```
     * index within the block
     * ```
     *
     * `uint64 index = 2;`
     */
    public fun clearIndex() {
      _builder.clearIndex()
    }

    /**
     * <pre>
     * transaction ID (hash, txid)
     * </pre>
     *
     * <code>bytes hash = 3;</code>
     */
    public var hash: com.google.protobuf.ByteString
      @JvmName("getHash")
      get() = _builder.getHash()
      @JvmName("setHash")
      set(value) {
        _builder.setHash(value)
      }
    /**
     * ```
     * transaction ID (hash, txid)
     * ```
     *
     * `bytes hash = 3;`
     */
    public fun clearHash() {
      _builder.clearHash()
    }
  }
}
public inline fun cash.z.wallet.sdk.internal.rpc.Service.TxFilter.copy(block: `cash.z.wallet.sdk.internal.rpc`.TxFilterKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.TxFilter =
  `cash.z.wallet.sdk.internal.rpc`.TxFilterKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cash.z.wallet.sdk.internal.rpc.Service.TxFilterOrBuilder.blockOrNull: cash.z.wallet.sdk.internal.rpc.Service.BlockID?
  get() = if (hasBlock()) getBlock() else null

