// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: service.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cash.z.wallet.sdk.internal.rpc;

@kotlin.jvm.JvmName("-initializelightdInfo")
public inline fun lightdInfo(block: cash.z.wallet.sdk.internal.rpc.LightdInfoKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.LightdInfo =
  cash.z.wallet.sdk.internal.rpc.LightdInfoKt.Dsl._create(cash.z.wallet.sdk.internal.rpc.Service.LightdInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * LightdInfo returns various information about this lightwalletd instance
 * and the state of the blockchain.
 * ```
 *
 * Protobuf type `cash.z.wallet.sdk.rpc.LightdInfo`
 */
public object LightdInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cash.z.wallet.sdk.internal.rpc.Service.LightdInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cash.z.wallet.sdk.internal.rpc.Service.LightdInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cash.z.wallet.sdk.internal.rpc.Service.LightdInfo = _builder.build()

    /**
     * `string version = 1;`
     */
    public var version: kotlin.String
      @JvmName("getVersion")
      get() = _builder.getVersion()
      @JvmName("setVersion")
      set(value) {
        _builder.setVersion(value)
      }
    /**
     * `string version = 1;`
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * `string vendor = 2;`
     */
    public var vendor: kotlin.String
      @JvmName("getVendor")
      get() = _builder.getVendor()
      @JvmName("setVendor")
      set(value) {
        _builder.setVendor(value)
      }
    /**
     * `string vendor = 2;`
     */
    public fun clearVendor() {
      _builder.clearVendor()
    }

    /**
     * <pre>
     * true
     * </pre>
     *
     * <code>bool taddrSupport = 3;</code>
     */
    public var taddrSupport: kotlin.Boolean
      @JvmName("getTaddrSupport")
      get() = _builder.getTaddrSupport()
      @JvmName("setTaddrSupport")
      set(value) {
        _builder.setTaddrSupport(value)
      }
    /**
     * ```
     * true
     * ```
     *
     * `bool taddrSupport = 3;`
     */
    public fun clearTaddrSupport() {
      _builder.clearTaddrSupport()
    }

    /**
     * ```
     * either "main" or "test"
     * ```
     *
     * `string chainName = 4;`
     */
    public var chainName: kotlin.String
      @JvmName("getChainName")
      get() = _builder.getChainName()
      @JvmName("setChainName")
      set(value) {
        _builder.setChainName(value)
      }
    /**
     * ```
     * either "main" or "test"
     * ```
     *
     * `string chainName = 4;`
     */
    public fun clearChainName() {
      _builder.clearChainName()
    }

    /**
     * <pre>
     * depends on mainnet or testnet
     * </pre>
     *
     * <code>uint64 saplingActivationHeight = 5;</code>
     */
    public var saplingActivationHeight: kotlin.Long
      @JvmName("getSaplingActivationHeight")
      get() = _builder.getSaplingActivationHeight()
      @JvmName("setSaplingActivationHeight")
      set(value) {
        _builder.setSaplingActivationHeight(value)
      }
    /**
     * ```
     * depends on mainnet or testnet
     * ```
     *
     * `uint64 saplingActivationHeight = 5;`
     */
    public fun clearSaplingActivationHeight() {
      _builder.clearSaplingActivationHeight()
    }

    /**
     * ```
     * protocol identifier, see consensus/upgrades.cpp
     * ```
     *
     * `string consensusBranchId = 6;`
     */
    public var consensusBranchId: kotlin.String
      @JvmName("getConsensusBranchId")
      get() = _builder.getConsensusBranchId()
      @JvmName("setConsensusBranchId")
      set(value) {
        _builder.setConsensusBranchId(value)
      }
    /**
     * ```
     * protocol identifier, see consensus/upgrades.cpp
     * ```
     *
     * `string consensusBranchId = 6;`
     */
    public fun clearConsensusBranchId() {
      _builder.clearConsensusBranchId()
    }

    /**
     * <pre>
     * latest block on the best chain
     * </pre>
     *
     * <code>uint64 blockHeight = 7;</code>
     */
    public var blockHeight: kotlin.Long
      @JvmName("getBlockHeight")
      get() = _builder.getBlockHeight()
      @JvmName("setBlockHeight")
      set(value) {
        _builder.setBlockHeight(value)
      }
    /**
     * ```
     * latest block on the best chain
     * ```
     *
     * `uint64 blockHeight = 7;`
     */
    public fun clearBlockHeight() {
      _builder.clearBlockHeight()
    }

    /**
     * `string gitCommit = 8;`
     */
    public var gitCommit: kotlin.String
      @JvmName("getGitCommit")
      get() = _builder.getGitCommit()
      @JvmName("setGitCommit")
      set(value) {
        _builder.setGitCommit(value)
      }
    /**
     * `string gitCommit = 8;`
     */
    public fun clearGitCommit() {
      _builder.clearGitCommit()
    }

    /**
     * `string branch = 9;`
     */
    public var branch: kotlin.String
      @JvmName("getBranch")
      get() = _builder.getBranch()
      @JvmName("setBranch")
      set(value) {
        _builder.setBranch(value)
      }
    /**
     * `string branch = 9;`
     */
    public fun clearBranch() {
      _builder.clearBranch()
    }

    /**
     * `string buildDate = 10;`
     */
    public var buildDate: kotlin.String
      @JvmName("getBuildDate")
      get() = _builder.getBuildDate()
      @JvmName("setBuildDate")
      set(value) {
        _builder.setBuildDate(value)
      }
    /**
     * `string buildDate = 10;`
     */
    public fun clearBuildDate() {
      _builder.clearBuildDate()
    }

    /**
     * `string buildUser = 11;`
     */
    public var buildUser: kotlin.String
      @JvmName("getBuildUser")
      get() = _builder.getBuildUser()
      @JvmName("setBuildUser")
      set(value) {
        _builder.setBuildUser(value)
      }
    /**
     * `string buildUser = 11;`
     */
    public fun clearBuildUser() {
      _builder.clearBuildUser()
    }

    /**
     * <pre>
     * less than tip height if zcashd is syncing
     * </pre>
     *
     * <code>uint64 estimatedHeight = 12;</code>
     */
    public var estimatedHeight: kotlin.Long
      @JvmName("getEstimatedHeight")
      get() = _builder.getEstimatedHeight()
      @JvmName("setEstimatedHeight")
      set(value) {
        _builder.setEstimatedHeight(value)
      }
    /**
     * ```
     * less than tip height if zcashd is syncing
     * ```
     *
     * `uint64 estimatedHeight = 12;`
     */
    public fun clearEstimatedHeight() {
      _builder.clearEstimatedHeight()
    }

    /**
     * ```
     * example: "v4.1.1-877212414"
     * ```
     *
     * `string zcashdBuild = 13;`
     */
    public var zcashdBuild: kotlin.String
      @JvmName("getZcashdBuild")
      get() = _builder.getZcashdBuild()
      @JvmName("setZcashdBuild")
      set(value) {
        _builder.setZcashdBuild(value)
      }
    /**
     * ```
     * example: "v4.1.1-877212414"
     * ```
     *
     * `string zcashdBuild = 13;`
     */
    public fun clearZcashdBuild() {
      _builder.clearZcashdBuild()
    }

    /**
     * ```
     * example: "/MagicBean:4.1.1/"
     * ```
     *
     * `string zcashdSubversion = 14;`
     */
    public var zcashdSubversion: kotlin.String
      @JvmName("getZcashdSubversion")
      get() = _builder.getZcashdSubversion()
      @JvmName("setZcashdSubversion")
      set(value) {
        _builder.setZcashdSubversion(value)
      }
    /**
     * ```
     * example: "/MagicBean:4.1.1/"
     * ```
     *
     * `string zcashdSubversion = 14;`
     */
    public fun clearZcashdSubversion() {
      _builder.clearZcashdSubversion()
    }
  }
}
public inline fun cash.z.wallet.sdk.internal.rpc.Service.LightdInfo.copy(block: `cash.z.wallet.sdk.internal.rpc`.LightdInfoKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.LightdInfo =
  `cash.z.wallet.sdk.internal.rpc`.LightdInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

