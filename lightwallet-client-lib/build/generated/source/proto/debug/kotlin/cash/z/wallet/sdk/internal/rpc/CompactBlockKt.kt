// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: compact_formats.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cash.z.wallet.sdk.internal.rpc;

@kotlin.jvm.JvmName("-initializecompactBlock")
public inline fun compactBlock(block: cash.z.wallet.sdk.internal.rpc.CompactBlockKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactBlock =
  cash.z.wallet.sdk.internal.rpc.CompactBlockKt.Dsl._create(cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactBlock.newBuilder()).apply { block() }._build()
/**
 * ```
 * CompactBlock is a packaging of ONLY the data from a block that's needed to:
 *   1. Detect a payment to your shielded Sapling address
 *   2. Detect a spend of your shielded Sapling notes
 *   3. Update your witnesses to generate new Sapling spend proofs.
 * ```
 *
 * Protobuf type `cash.z.wallet.sdk.rpc.CompactBlock`
 */
public object CompactBlockKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactBlock.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactBlock.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactBlock = _builder.build()

    /**
     * <pre>
     * the version of this wire format, for storage
     * </pre>
     *
     * <code>uint32 protoVersion = 1;</code>
     */
    public var protoVersion: kotlin.Int
      @JvmName("getProtoVersion")
      get() = _builder.getProtoVersion()
      @JvmName("setProtoVersion")
      set(value) {
        _builder.setProtoVersion(value)
      }
    /**
     * ```
     * the version of this wire format, for storage
     * ```
     *
     * `uint32 protoVersion = 1;`
     */
    public fun clearProtoVersion() {
      _builder.clearProtoVersion()
    }

    /**
     * <pre>
     * the height of this block
     * </pre>
     *
     * <code>uint64 height = 2;</code>
     */
    public var height: kotlin.Long
      @JvmName("getHeight")
      get() = _builder.getHeight()
      @JvmName("setHeight")
      set(value) {
        _builder.setHeight(value)
      }
    /**
     * ```
     * the height of this block
     * ```
     *
     * `uint64 height = 2;`
     */
    public fun clearHeight() {
      _builder.clearHeight()
    }

    /**
     * <pre>
     * the ID (hash) of this block, same as in block explorers
     * </pre>
     *
     * <code>bytes hash = 3;</code>
     */
    public var hash: com.google.protobuf.ByteString
      @JvmName("getHash")
      get() = _builder.getHash()
      @JvmName("setHash")
      set(value) {
        _builder.setHash(value)
      }
    /**
     * ```
     * the ID (hash) of this block, same as in block explorers
     * ```
     *
     * `bytes hash = 3;`
     */
    public fun clearHash() {
      _builder.clearHash()
    }

    /**
     * <pre>
     * the ID (hash) of this block's predecessor
     * </pre>
     *
     * <code>bytes prevHash = 4;</code>
     */
    public var prevHash: com.google.protobuf.ByteString
      @JvmName("getPrevHash")
      get() = _builder.getPrevHash()
      @JvmName("setPrevHash")
      set(value) {
        _builder.setPrevHash(value)
      }
    /**
     * ```
     * the ID (hash) of this block's predecessor
     * ```
     *
     * `bytes prevHash = 4;`
     */
    public fun clearPrevHash() {
      _builder.clearPrevHash()
    }

    /**
     * <pre>
     * Unix epoch time when the block was mined
     * </pre>
     *
     * <code>uint32 time = 5;</code>
     */
    public var time: kotlin.Int
      @JvmName("getTime")
      get() = _builder.getTime()
      @JvmName("setTime")
      set(value) {
        _builder.setTime(value)
      }
    /**
     * ```
     * Unix epoch time when the block was mined
     * ```
     *
     * `uint32 time = 5;`
     */
    public fun clearTime() {
      _builder.clearTime()
    }

    /**
     * <pre>
     * (hash, prevHash, and time) OR (full header)
     * </pre>
     *
     * <code>bytes header = 6;</code>
     */
    public var header: com.google.protobuf.ByteString
      @JvmName("getHeader")
      get() = _builder.getHeader()
      @JvmName("setHeader")
      set(value) {
        _builder.setHeader(value)
      }
    /**
     * ```
     * (hash, prevHash, and time) OR (full header)
     * ```
     *
     * `bytes header = 6;`
     */
    public fun clearHeader() {
      _builder.clearHeader()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class VtxProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * zero or more compact transactions from this block
     * ```
     *
     * `repeated .cash.z.wallet.sdk.rpc.CompactTx vtx = 7;`
     */
     public val vtx: com.google.protobuf.kotlin.DslList<cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactTx, VtxProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getVtxList()
      )
    /**
     * ```
     * zero or more compact transactions from this block
     * ```
     *
     * `repeated .cash.z.wallet.sdk.rpc.CompactTx vtx = 7;`
     * @param value The vtx to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addVtx")
    public fun com.google.protobuf.kotlin.DslList<cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactTx, VtxProxy>.add(value: cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactTx) {
      _builder.addVtx(value)
    }
    /**
     * ```
     * zero or more compact transactions from this block
     * ```
     *
     * `repeated .cash.z.wallet.sdk.rpc.CompactTx vtx = 7;`
     * @param value The vtx to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignVtx")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactTx, VtxProxy>.plusAssign(value: cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactTx) {
      add(value)
    }
    /**
     * ```
     * zero or more compact transactions from this block
     * ```
     *
     * `repeated .cash.z.wallet.sdk.rpc.CompactTx vtx = 7;`
     * @param values The vtx to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllVtx")
    public fun com.google.protobuf.kotlin.DslList<cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactTx, VtxProxy>.addAll(values: kotlin.collections.Iterable<cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactTx>) {
      _builder.addAllVtx(values)
    }
    /**
     * ```
     * zero or more compact transactions from this block
     * ```
     *
     * `repeated .cash.z.wallet.sdk.rpc.CompactTx vtx = 7;`
     * @param values The vtx to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllVtx")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactTx, VtxProxy>.plusAssign(values: kotlin.collections.Iterable<cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactTx>) {
      addAll(values)
    }
    /**
     * ```
     * zero or more compact transactions from this block
     * ```
     *
     * `repeated .cash.z.wallet.sdk.rpc.CompactTx vtx = 7;`
     * @param index The index to set the value at.
     * @param value The vtx to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setVtx")
    public operator fun com.google.protobuf.kotlin.DslList<cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactTx, VtxProxy>.set(index: kotlin.Int, value: cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactTx) {
      _builder.setVtx(index, value)
    }
    /**
     * ```
     * zero or more compact transactions from this block
     * ```
     *
     * `repeated .cash.z.wallet.sdk.rpc.CompactTx vtx = 7;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearVtx")
    public fun com.google.protobuf.kotlin.DslList<cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactTx, VtxProxy>.clear() {
      _builder.clearVtx()
    }

    /**
     * ```
     * information about the state of the chain as of this block
     * ```
     *
     * `.cash.z.wallet.sdk.rpc.ChainMetadata chainMetadata = 8;`
     */
    public var chainMetadata: cash.z.wallet.sdk.internal.rpc.CompactFormats.ChainMetadata
      @JvmName("getChainMetadata")
      get() = _builder.getChainMetadata()
      @JvmName("setChainMetadata")
      set(value) {
        _builder.setChainMetadata(value)
      }
    /**
     * ```
     * information about the state of the chain as of this block
     * ```
     *
     * `.cash.z.wallet.sdk.rpc.ChainMetadata chainMetadata = 8;`
     */
    public fun clearChainMetadata() {
      _builder.clearChainMetadata()
    }
    /**
     * ```
     * information about the state of the chain as of this block
     * ```
     *
     * `.cash.z.wallet.sdk.rpc.ChainMetadata chainMetadata = 8;`
     * @return Whether the chainMetadata field is set.
     */
    public fun hasChainMetadata(): kotlin.Boolean {
      return _builder.hasChainMetadata()
    }
  }
}
public inline fun cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactBlock.copy(block: `cash.z.wallet.sdk.internal.rpc`.CompactBlockKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactBlock =
  `cash.z.wallet.sdk.internal.rpc`.CompactBlockKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cash.z.wallet.sdk.internal.rpc.CompactFormats.CompactBlockOrBuilder.chainMetadataOrNull: cash.z.wallet.sdk.internal.rpc.CompactFormats.ChainMetadata?
  get() = if (hasChainMetadata()) getChainMetadata() else null

