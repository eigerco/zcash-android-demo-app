// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: service.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cash.z.wallet.sdk.internal.rpc;

@kotlin.jvm.JvmName("-initializechainSpec")
public inline fun chainSpec(block: cash.z.wallet.sdk.internal.rpc.ChainSpecKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.ChainSpec =
  cash.z.wallet.sdk.internal.rpc.ChainSpecKt.Dsl._create(cash.z.wallet.sdk.internal.rpc.Service.ChainSpec.newBuilder()).apply { block() }._build()
/**
 * ```
 * Chainspec is a placeholder to allow specification of a particular chain fork.
 * ```
 *
 * Protobuf type `cash.z.wallet.sdk.rpc.ChainSpec`
 */
public object ChainSpecKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cash.z.wallet.sdk.internal.rpc.Service.ChainSpec.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cash.z.wallet.sdk.internal.rpc.Service.ChainSpec.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cash.z.wallet.sdk.internal.rpc.Service.ChainSpec = _builder.build()
  }
}
public inline fun cash.z.wallet.sdk.internal.rpc.Service.ChainSpec.copy(block: `cash.z.wallet.sdk.internal.rpc`.ChainSpecKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Service.ChainSpec =
  `cash.z.wallet.sdk.internal.rpc`.ChainSpecKt.Dsl._create(this.toBuilder()).apply { block() }._build()

