// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: darkside.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cash.z.wallet.sdk.internal.rpc;

@kotlin.jvm.JvmName("-initializedarksideMetaState")
public inline fun darksideMetaState(block: cash.z.wallet.sdk.internal.rpc.DarksideMetaStateKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Darkside.DarksideMetaState =
  cash.z.wallet.sdk.internal.rpc.DarksideMetaStateKt.Dsl._create(cash.z.wallet.sdk.internal.rpc.Darkside.DarksideMetaState.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `cash.z.wallet.sdk.rpc.DarksideMetaState`
 */
public object DarksideMetaStateKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cash.z.wallet.sdk.internal.rpc.Darkside.DarksideMetaState.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cash.z.wallet.sdk.internal.rpc.Darkside.DarksideMetaState.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cash.z.wallet.sdk.internal.rpc.Darkside.DarksideMetaState = _builder.build()

    /**
     * <code>int32 saplingActivation = 1;</code>
     */
    public var saplingActivation: kotlin.Int
      @JvmName("getSaplingActivation")
      get() = _builder.getSaplingActivation()
      @JvmName("setSaplingActivation")
      set(value) {
        _builder.setSaplingActivation(value)
      }
    /**
     * `int32 saplingActivation = 1;`
     */
    public fun clearSaplingActivation() {
      _builder.clearSaplingActivation()
    }

    /**
     * `string branchID = 2;`
     */
    public var branchID: kotlin.String
      @JvmName("getBranchID")
      get() = _builder.getBranchID()
      @JvmName("setBranchID")
      set(value) {
        _builder.setBranchID(value)
      }
    /**
     * `string branchID = 2;`
     */
    public fun clearBranchID() {
      _builder.clearBranchID()
    }

    /**
     * `string chainName = 3;`
     */
    public var chainName: kotlin.String
      @JvmName("getChainName")
      get() = _builder.getChainName()
      @JvmName("setChainName")
      set(value) {
        _builder.setChainName(value)
      }
    /**
     * `string chainName = 3;`
     */
    public fun clearChainName() {
      _builder.clearChainName()
    }
  }
}
public inline fun cash.z.wallet.sdk.internal.rpc.Darkside.DarksideMetaState.copy(block: `cash.z.wallet.sdk.internal.rpc`.DarksideMetaStateKt.Dsl.() -> kotlin.Unit): cash.z.wallet.sdk.internal.rpc.Darkside.DarksideMetaState =
  `cash.z.wallet.sdk.internal.rpc`.DarksideMetaStateKt.Dsl._create(this.toBuilder()).apply { block() }._build()

